#define STEELHIVE_SPECIAL_NOTES_ELECTRIC
_"This unit has an attack which, if it hits an enemy unit, will halve that unit's movement at the beginning of its next turn."#enddef

#define STEELHIVE_SPECIAL_NOTES_BROADCAST
_"This unit has a leadership effect on all mechanical units."#enddef

#define STEELHIVE_SPECIAL_NOTES_RECHARGE
_"This unit drains energy with some of its attacks. This drain is most effective against non-organic units."#enddef

#define STEELHIVE_SPECIAL_ELECTRIC
[electric]
	id=electric
	name=_"electric"
	name_inactive=_"electric"
	description=_"This attack reduces an enemy's movement by half on its next turn."
	description_inactive=_"This attack reduces an enemy's movement by half on its next turn."
[/electric]
#enddef

#define STEELHIVE_ELECTRIC_EVENT
[event]
	name=turn refresh
	first_time_only=no
	[store_unit]
		[filter]
			side=$side_number
			[filter_wml]
				[status]
					electric="yes"
				[/status]
			[/filter_wml]
		[/filter]
		variable=electric_store
		kill=yes
	[/store_unit]
	{FOREACH electric_store i}
		{VARIABLE electric_store[$i].moves $electric_store[$i].max_moves}
		{VARIABLE_OP electric_store[$i].moves multiply 0.5}
		{CLEAR_VARIABLE electric_store[$i].status.electric}
		[unstore_unit]
			variable=electric_store[$i]
		[/unstore_unit]
		[remove_unit_overlay]
			x,y=$electric_store[$i].x,$electric_store[$i].y
			image=misc/electric.png
		[/remove_unit_overlay]
	{NEXT i}
	{CLEAR_VARIABLE electric_store[$i]}
[/event]
[event]
	name=attacker hits
	first_time_only=no
	[filter_attack]
		special=electric
	[/filter_attack]
	{VARIABLE second_unit.status.electric  "yes"}
	[unstore_unit]
		variable=second_unit
	[/unstore_unit]
	[unit_overlay]
		x,y=$second_unit.x,$second_unit.y
		image=misc/electric.png
	[/unit_overlay]
[/event]
[event]
	name=defender hits
	first_time_only=no
	[filter_second_attack]
		special=electric
	[/filter_second_attack]
	{VARIABLE unit.status.electric  "yes"}
	[unstore_unit]
		variable=unit
	[/unstore_unit]
	[unit_overlay]
		x,y=$unit.x,$unit.y
		image=misc/electric.png
	[/unit_overlay]
[/event]
#enddef

#define STEELHIVE_BROADCAST
	[leadership]
		id=leadership
		value=25
		cumulative=no
		name= _ "broadcast"
		female_name= _ "female^broadcast"
		description= _ "This unit transmits commands from the central core, making nearby units more effective in battle.

Adjacent own units of equal or lower level will do 25% more damage times the difference in their levels plus one in battle."
		affect_self=no
		[affect_adjacent]
			adjacent=n,ne,se,s,sw,nw
			[filter]
				[filter_wml]
					[status]
						not_living=yes
					[/status]
				[/filter_wml]
			[/filter]
		[/affect_adjacent]
	[/leadership]
#enddef

#define STEELHIVE_SUBMERGE
	# Canned definition of the Submerge ability to be included in an
	# [abilities] clause.
	[hides]
		id=steelhive_submerge
		name= _ "aquatics"
		female_name= _ "female^aquatics"
		description= _ "This unit can dive beneath even the shallowest water, remaining undetected by its enemies.

Enemy units cannot see this unit while it is in water, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
		name_inactive= _ "aquatics"
		female_name_inactive= _ "female^aquatics"
		description_inactive= _ "This unit can dive beneath even the shallowest water, remaining undetected by its enemies.

Enemy units cannot see this unit while it is in water, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
		affect_self=yes
		[filter_self]
			[filter_location]
				terrain=Wo*,Ss*,Chs,Ww*,Chw,Ss^Vhs
			[/filter_location]
		[/filter_self]
	[/hides]
#enddef

#define STEELHIVE_DRAIN
[steelhive_drain]
	id=steelhive_drain
	name=_ "recharges"
	description= _ "This unit recharges its energy using the electomagnetic energy of the unit it is fighting. It heals itself for 25% of the damage it deals to living units and 50% of the damage it deals to non-organic units (rounded down)."
[/steelhive_drain]
[/abilities]

[event]
	name=defender hits
	first_time_only=no
	[filter_second_attack]
		special=steelhive_drain
	[/filter_second_attack]
	[if]
		[have_unit]
			id=$unit.id
			[filter_wml]
				[status]
					not_living=yes
				[/status]
			[/filter_wml]
		[/have_unit]
		[then]
			{VARIABLE drained 0.5}
		[/then]
		[else]
			{VARIABLE drained 0.25}
		[/else]
	[/if]
	{VARIABLE_OP drained multiply $damage_inflicted}
	{VARIABLE_OP drained round floor}
	{VARIABLE_OP second_unit.hitpoints add $drained}
	[unstore_unit]
		variable=second_unit
		text=$drained
		{COLOR_HEAL}
	[/unstore_unit]
[/event]
[event]
	name=attacker hits
	first_time_only=no
	[filter_attack]
		special=steelhive_drain
	[/filter_attack]
	[if]
		[have_unit]
			id=$second_unit.id
			[filter_wml]
				[status]
					not_living=yes
				[/status]
			[/filter_wml]
		[/have_unit]
		[then]
			{VARIABLE drained 0.5}
		[/then]
		[else]
			{VARIABLE drained 0.25}
		[/else]
	[/if]
	{VARIABLE_OP drained multiply $damage_inflicted}
	{VARIABLE_OP drained round floor}
	{VARIABLE_OP unit.hitpoints add $drained}
	[unstore_unit]
		variable=unit
		text=$drained
		{COLOR_HEAL}
	[/unstore_unit]
[/event]

[+abilities]
#enddef

