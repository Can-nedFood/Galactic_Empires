####################################################################################
# TERRAIN BONUSES
####################################################################################

#define PLUS_ONE_FOOD
*^Fet,*^Fetd,*^Ft,*^Ftr,*^Ftd,*^Ftp,*^Fts,*^Fp,*^Fpa,*^Fds,*^Fdf,*^Fdw,*^Fda,*^Fms,*^Fmf,*^Fmw,*^Fma,Wwf #enddef

#define PLUS_TWO_FOOD
Gg,Gg^Efm,Gs,Gs^Efm,Gd,Gd^Efm,Gll,Gll^Efm #enddef

#define PLUS_THREE_FOOD
*^Uf,*^Ufi,*^Emf,*^Gvs,*^Wm,*^Do #enddef

#define PLUS_ONE_GOLD
Gg^Fet,Gs^Fet,Gd^Fet,Gll^Fet,Aa^Fet,Gg^Fetd,Gs^Fetd,Gd^Fetd,Gll^Fetd,Aa^Fetd,Gg^Ft,Gs^Ft,Gd^Ft,Gll^Ft,Aa^Ft,Gg^Ftr,Gs^Ftr,Gd^Ftr,Gll^Ftr,Aa^Ftr,Gg^Ftd,Gs^Ftd,Gd^Ftd,Gll^Ftd,Aa^Ftd,Gg^Ftp,Gs^Ftp,Gd^Ftp,Gll^Ftp,Aa^Ftp,Gg^Fts,Gs^Fts,Gd^Fts,Gll^Fts,Aa^Fts,Gg^Fp,Gs^Fp,Gd^Fp,Gll^Fp,Aa^Fp,Gg^Fpa,Gs^Fpa,Gd^Fpa,Gl^Fpa,Aa^Fpa,Gg^Fds,Gs^Fds,Gd^Fds,Gll^Fds,Aa^Fds,Gg^Fdf,Gs^Fdf,Gd^Fdf,Gll^Fdf,Aa^Fdf,Gg^Fdw,Gs^Fdw,Gd^Fdw,Gll^Fdw,Aa^Fdw,Gg^Fda,Gs^Fda,Gd^Fda,Gll^Fda,Aa^da,Gg^Fms,Gs^Fms,Gd^Fms,Gll^Fms,Aa^Fms,Gg^Fmf,Gs^Fmf,Gd^Fmf,Gll^Fmf,Aa^Fmf,Gg^Fmw,Gs^Fmw,Gd^Fmw,Gll^Fmw,Aa^Fmw,Gg^Fma,Gs^Fma,Gd^Fma,Gll^Fma,Aa^Fma,Uu,Uu^li,Uu^*,Uue,Uue^li,Uue^* #enddef

#define PLUS_TWO_GOLD
Hh^Fet,Hhd^Fet,Hd^Fet,Ha^Fet,Uh^Fet,Hh^Fetd,Hhd^Fetd,Hd^Fetd,Ha^Fetd,Uh^Fetd,Hh^Ft,Hhd^Ft,Hd^Ft,Ha^Ft,Uh^Ft,Hh^Ftr,Hhd^Ftr,Hd^Ftr,Ha^Ftr,Uh^Ftr,Hh^Ftd,Hhd^Ftd,Hd^Ftd,Ha^Ftd,Uh^Ftd,Hh^Ftp,Hhd^Ftp,Hd^Ftp,Ha^Ftp,Uh^Ftp,Hh^Fts,Hhd^Fts,Hd^Fts,Ha^Fts,Uh^Fts,Hh^Fp,Hhd^Fp,Hd^Fp,Ha^Fp,Uh^Fp,Hh^Fpa,Hhd^Fpa,Hd^Fpa,Gl^Fpa,Uh^Fpa,Hh^Fds,Hhd^Fds,Hd^Fds,Ha^Fds,Uh^Fds,Hh^Fdf,Hhd^Fdf,Hd^Fdf,Ha^Fdf,Uh^Fdf,Hh^Fdw,Hhd^Fdw,Hd^Fdw,Ha^Fdw,Uh^Fdw,Hh^Fda,Hhd^Fda,Hd^Fda,Ha^Fda,Uh^da,Hh^Fms,Hhd^Fms,Hd^Fms,Ha^Fms,Uh^Fms,Hh^Fmf,Hhd^Fmf,Hd^Fmf,Ha^Fmf,Uh^Fmf,Hh^Fmw,Hhd^Fmw,Hd^Fmw,Ha^Fmw,Uh^Fmw,Hh^Fma,Hhd^Fma,Hd^Fma,Ha^Fma,Uh^Fma,Hh,Hhd,Hd,Ha,Ua,Uh,Ua^li,Uh^li,*^Dr,Zyc,Zyc^*,Zyj,Zyj^* #enddef

#define PLUS_THREE_GOLD
Mm,Md,Ms,Zyd,Zyk,Mm^*,Md^*,Ms^*,Zyd^*,Zyk^* #enddef


####################################################################################
# FARMING
####################################################################################

#define GE_FARMING
[event]
	name=side turn
	first_time_only=no
	
	[if]
	{BOB_CONDITION turn_number greater_than 1}
	[then]
	
	# Does the player have any healthy workers on farmable terrain?
	[if]
	[have_unit]
		ability=work
		side=$side_number
		[filter_wml]
			hitpoints=$this_unit.max_hitpoints
		[/filter_wml]
		[filter_location]
			terrain={PLUS_ONE_FOOD},{PLUS_TWO_FOOD},{PLUS_THREE_FOOD}
		[/filter_location]
	[/have_unit]
	[then]
	
	# Store all the player's viable workers...
	[store_unit]
		[filter]
			ability=work
			side=$side_number
			[filter_wml]
				hitpoints=$this_unit.max_hitpoints
			[/filter_wml]
			[filter_location]
				terrain={PLUS_ONE_FOOD},{PLUS_TWO_FOOD},{PLUS_THREE_FOOD}
			[/filter_location]
		[/filter]
		variable=farmers
	[/store_unit]
		
		# Run through all viable workers
		{FOREACH farmers i}
				
				# Is the worker on +1 terrain?
				[if]
					[have_location]
						x=$farmers[$i].x
						y=$farmers[$i].y
						terrain={PLUS_ONE_FOOD}
					[/have_location]
					[then]
						{VARIABLE temp_food 1}
					[/then]
				[/if]
				# Is the worker on +2 terrain?
				[if]
					[have_location]
						x=$farmers[$i].x
						y=$farmers[$i].y
						terrain={PLUS_TWO_FOOD}
					[/have_location]
					[then]
						{VARIABLE temp_food 2}
					[/then]
				[/if]
				# Is the worker on +3 terrain?
				[if]
					[have_location]
						x=$farmers[$i].x
						y=$farmers[$i].y
						terrain={PLUS_THREE_FOOD}
					[/have_location]
					[then]
						{VARIABLE temp_food 3}
					[/then]
				[/if]

				# Store the local HQ
				[store_unit]
					[filter]
						has_weapon=food
						side=$side_number
						role=$farmers[$i].role
					[/filter]
					variable=farm_hq
				[/store_unit]
				
				# If the HQ has a replicator, +1 to the food produced by the worker
				[if]
				{BOB_CONDITION farm_hq.variables.replicator equals yes}
					[then]
						{VARIABLE_OP temp_food add 1}
					[/then]
				[/if]
				
				# Add the food produced by the worker to the HQ's stockpile
				{VARIABLE_OP farm_hq.attack[0].damage add $temp_food}

				[unstore_unit]
					variable=farm_hq
				[/unstore_unit]
				{CLEAR_VARIABLE farm_hq}
			
			[unstore_unit]
				variable=farmers[$i]
				text=$temp_food
				red,green,blue=153,102,51
			[/unstore_unit]
					
		{NEXT i}

	{CLEAR_VARIABLE temp_food}	
	{CLEAR_VARIABLE farmers}
	
	[/then]
	[/if]
	
	[/then]
	[/if]
[/event]
#enddef


####################################################################################
# Mining
####################################################################################

#define GE_MINING
[event]
	name=side turn
	first_time_only=no
	
	[if]
	{BOB_CONDITION turn_number greater_than 1}
	[then]
	
	# Does the player have any healthy workers on mineable terrain?
	[if]
	[have_unit]
		ability=work
		side=$side_number
		[filter_wml]
			hitpoints=$this_unit.max_hitpoints
		[/filter_wml]
		[filter_location]
			terrain={PLUS_ONE_GOLD},{PLUS_TWO_GOLD},{PLUS_THREE_GOLD}
		[/filter_location]
	[/have_unit]
	[then]
	
	# Store all the player's viable workers...
	[store_unit]
		[filter]
			ability=work
			side=$side_number
			[filter_wml]
				hitpoints=$this_unit.max_hitpoints
			[/filter_wml]
			[filter_location]
				terrain={PLUS_ONE_GOLD},{PLUS_TWO_GOLD},{PLUS_THREE_GOLD}
			[/filter_location]
		[/filter]
		variable=miners
	[/store_unit]
		
		# Run through all viable workers
		{FOREACH miners i}
				
				# Is the worker on +1 terrain?
				[if]
					[have_location]
						x=$miners[$i].x
						y=$miners[$i].y
						terrain={PLUS_ONE_GOLD}
					[/have_location]
					[then]
						{VARIABLE temp_gold 1}
					[/then]
				[/if]
				# Is the worker on +2 terrain?
				[if]
					[have_location]
						x=$miners[$i].x
						y=$miners[$i].y
						terrain={PLUS_TWO_GOLD}
					[/have_location]
					[then]
						{VARIABLE temp_gold 2}
					[/then]
				[/if]
				# Is the worker on +3 terrain?
				[if]
					[have_location]
						x=$miners[$i].x
						y=$miners[$i].y
						terrain={PLUS_THREE_GOLD}
					[/have_location]
					[then]
						{VARIABLE temp_gold 3}
					[/then]
				[/if]
				
				# Does the local HQ have a nanomine?
				[if]
					[have_unit]
						has_weapon=food
						side=$side_number
						role=$miners[$i].role
						ability=nanomine
						[or]
							has_weapon=food
							side=$side_number
							role=$miners[$i].role
							ability=advancednanomine
						[/or]
					[/have_unit]
					[then]
						# If so, store the HQ	
						[store_unit]
							[filter]
								has_weapon=food
								side=$side_number
								role=$miners[$i].role
							[/filter]
							variable=mine_hq
						[/store_unit]
							# If the HQ has a nanomine, add to the gold produced by the worker
							[if]
							{BOB_CONDITION mine_hq.variables.nanomine equals basic}
								[then]
									{VARIABLE_OP temp_gold add 1}
								[/then]
							[/if]
							[if]
							{BOB_CONDITION mine_hq.variables.nanomine equals advanced}
								[then]
									{VARIABLE_OP temp_gold add 2}
								[/then]
							[/if]
						[unstore_unit]
							variable=mine_hq
						[/unstore_unit]
						{CLEAR_VARIABLE mine_hq}
					[/then]
				[/if]
				
				# Add the gold
				{BOB_GOLD $side_number $temp_gold}
			
			[unstore_unit]
				variable=miners[$i]
				text=$temp_gold
				red,green,blue=204,204,51
			[/unstore_unit]
					
		{NEXT i}
		
	{CLEAR_VARIABLE temp_gold}
	{CLEAR_VARIABLE miners}
	[/then]
	[/if]
	
	[/then]
	[/if]
[/event]
#enddef


####################################################################################
# HQ PRODUCTION
####################################################################################

#define GE_HQ_PRODUCTION

# Farming

[event]
	name=side turn
	first_time_only=no
	
	[if]
	{BOB_CONDITION turn_number greater_than 1}
	[then]
	
	[store_unit]
		[filter]
			has_weapon=food
			side=$side_number
		[/filter]
		variable=hq
	[/store_unit]

		{FOREACH hq i}
			
			# All HQs generate a default of 2 food per turn
			{VARIABLE temp_food 2}
			# +1 if it has a food processor
			[if]
			{BOB_CONDITION hq[$i].variables.food_processor equals yes}
				[then]
					{VARIABLE_OP temp_food add 1}
				[/then]
			[/if]
			# Add the food produced to the HQ's food store
			{VARIABLE_OP hq[$i].attack[0].damage add $temp_food}
			
			[unstore_unit]
				variable=hq[$i]
				text=_ "$temp_food"
				red,green,blue=153,102,51
			[/unstore_unit]
					
		{NEXT i}
	
	{CLEAR_VARIABLE hq}
	{CLEAR_VARIABLE temp_food}

	[/then]
	[/if]
[/event]

# Mineral Processor

[event]
	name=side turn
	first_time_only=no
	
	[if]
	{BOB_CONDITION turn_number greater_than 1}
	[then]
	
	[if]
	[have_unit]
		has_weapon=food
		side=$side_number
		ability=mineralprocessor
	[/have_unit]
	[then]
	
	[store_unit]
		[filter]
			has_weapon=food
			side=$side_number
			ability=mineralprocessor
		[/filter]
		variable=processor
		kill=no
	[/store_unit]

		{FOREACH processor i}
			
			{BOB_GOLD $side_number 1}
			
			[unstore_unit]
				variable=processor[$i]
				text=_ "1"
				red,green,blue=204,204,51
			[/unstore_unit]
					
		{NEXT i}
	
	{CLEAR_VARIABLE processor}
	[/then]
	[/if]
	
	[/then]
	[/if]
[/event]

#enddef
