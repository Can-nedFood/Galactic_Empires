
####################################################################################
# BEAMING
####################################################################################

####################################
# Beaming Up
####################################

#define GE_BEAMING_UP DIRECTION

[set_menu_item]
	id=Beam_Up_{DIRECTION}
	description=_ "Beam Me Up!"
	image=misc/beam-{DIRECTION}.png

	[show_if]
	
		# Are you clicking on a suitable unit to beam?
		[have_unit]
			x,y=$x1,$y1
			side=$side_number
			[filter_wml]
				attacks_left=1
			[/filter_wml]
			[not]
				[filter_wml]
					moves=0
				[/filter_wml]
			[/not]
			[not]
				race=building
			[/not]
			[not]
				[filter_wml]
					[status]
						poisoned=yes
					[/status]
				[/filter_wml]
			[/not]
		[/have_unit]
		
		# Is there a transporter at the relevant planet?
		[have_unit]
			ability=transport
			side=$side_number
			[not]
				[filter_wml]
					[attack]
						name=passengers
						damage=$this_unit.attack[0].number
					[/attack]
				[/filter_wml]
			[/not]
			[not]
				[filter_wml]
					[status]
						petrified=on
					[/status]
				[/filter_wml]
			[/not]
			[filter_adjacent]
				role=planet
				id=$unit.role
				adjacent={DIRECTION}
			[/filter_adjacent]
		[/have_unit]
		
	[/show_if]
	[command]
		
		# Store the transporter
		[store_unit]
			[filter]
				ability=transport
				side=$side_number
				[not]
					[filter_wml]
						[attack]
							name=passengers
							damage=$this_unit.attack[0].number
						[/attack]
					[/filter_wml]
				[/not]
				[not]
					[filter_wml]
						[status]
							petrified=on
						[/status]
					[/filter_wml]
				[/not]
				[filter_adjacent]
					role=planet
					id=$unit.role
					adjacent={DIRECTION}
				[/filter_adjacent]
			[/filter]
			variable=ship
		[/store_unit]
	
		{VARIABLE_OP ship.attack[0].damage add 1}
		
		# 1
		[if]
			{BOB_CONDITION ship.variables.passengers_1_hp less_than 1}
			[then]
				{VARIABLE ship.variables.passengers_1_id $unit.id}
				{VARIABLE ship.variables.passengers_1_type $unit.type}
				{VARIABLE ship.variables.passengers_1_image $unit.image}
				{VARIABLE ship.variables.passengers_1_xp $unit.experience}
				{VARIABLE ship.variables.passengers_1_max_xp $unit.max_experience}
				{VARIABLE ship.variables.passengers_1_hp $unit.hitpoints}
				{VARIABLE ship.variables.passengers_1_max_hp $unit.max_hitpoints}
			[/then]
			
			[else]
				# 2
				[if]
					{BOB_CONDITION ship.variables.passengers_2_hp less_than 1}
					[then]
						{VARIABLE ship.variables.passengers_2_id $unit.id}
						{VARIABLE ship.variables.passengers_2_type $unit.type}
						{VARIABLE ship.variables.passengers_2_image $unit.image}
						{VARIABLE ship.variables.passengers_2_xp $unit.experience}
						{VARIABLE ship.variables.passengers_2_max_xp $unit.max_experience}
						{VARIABLE ship.variables.passengers_2_hp $unit.hitpoints}
						{VARIABLE ship.variables.passengers_2_max_hp $unit.max_hitpoints}
					[/then]
					
					[else]
						# 3
						[if]
							{BOB_CONDITION ship.variables.passengers_3_hp less_than 1}
							[then]
								{VARIABLE ship.variables.passengers_3_id $unit.id}
								{VARIABLE ship.variables.passengers_3_type $unit.type}
								{VARIABLE ship.variables.passengers_3_image $unit.image}
								{VARIABLE ship.variables.passengers_3_xp $unit.experience}
								{VARIABLE ship.variables.passengers_3_max_xp $unit.max_experience}
								{VARIABLE ship.variables.passengers_3_hp $unit.hitpoints}
								{VARIABLE ship.variables.passengers_3_max_hp $unit.max_hitpoints}
							[/then]
							
							[else]
								# 4
								[if]
									{BOB_CONDITION ship.variables.passengers_4_hp less_than 1}
									[then]
										{VARIABLE ship.variables.passengers_4_id $unit.id}
										{VARIABLE ship.variables.passengers_4_type $unit.type}
										{VARIABLE ship.variables.passengers_4_image $unit.image}
										{VARIABLE ship.variables.passengers_4_xp $unit.experience}
										{VARIABLE ship.variables.passengers_4_max_xp $unit.max_experience}
										{VARIABLE ship.variables.passengers_4_hp $unit.hitpoints}
										{VARIABLE ship.variables.passengers_4_max_hp $unit.max_hitpoints}
									[/then]
									
									[else]
										# 5
										[if]
											{BOB_CONDITION ship.variables.passengers_5_hp less_than 1}
											[then]
												{VARIABLE ship.variables.passengers_5_id $unit.id}
												{VARIABLE ship.variables.passengers_5_type $unit.type}
												{VARIABLE ship.variables.passengers_5_image $unit.image}
												{VARIABLE ship.variables.passengers_5_xp $unit.experience}
												{VARIABLE ship.variables.passengers_5_max_xp $unit.max_experience}
												{VARIABLE ship.variables.passengers_5_hp $unit.hitpoints}
												{VARIABLE ship.variables.passengers_5_max_hp $unit.max_hitpoints}
											[/then]
										[/if]
									[/else]
								[/if]
								
							[/else]
						[/if]
						
					[/else]
				[/if]
		
			[/else]
		[/if]
		
		[unstore_unit]
			variable=ship
		[/unstore_unit]

		[animate_unit]
			flag=recruited
			with_bars=no
			[filter]
				x=$x1
				y=$y1
			[/filter]
		[/animate_unit]
		
		[store_unit]
			[filter]
				x,y=$x1,$y1
			[/filter]
			kill=yes
			variable=beamed
		[/store_unit]
			{VARIABLE beamed.role transit}
		[unstore_unit]
			variable=beamed
			x,y=recall,recall
		[/unstore_unit]
		
		{CLEAR_VARIABLE beamed}
		{CLEAR_VARIABLE ship}
	[/command]
[/set_menu_item]

#enddef


####################################
# Beaming Down
####################################

#define GE_BEAMING_DOWN

[set_menu_item]
	id=Beam_Down
	description=_ "Beam Passengers To Planet"
	image=misc/beam.png
	[show_if]
		[have_unit]
			x,y=$x1,$y1
			side=$side_number
			ability=transport
			[not]
				[filter_wml]
					[attack]
						name=passengers
						damage=0
					[/attack]
				[/filter_wml]
			[/not]
			[not]
				[filter_wml]
					[status]
						petrified=on
					[/status]
				[/filter_wml]
			[/not]
			[filter_adjacent]
				role=planet
			[/filter_adjacent]
		[/have_unit]
	[/show_if]
	[command]

	[store_unit]
		[filter]
			role=planet
			[filter_adjacent]
				x,y=$x1,$y1
				side=$side_number
				ability=transport
			[/filter_adjacent]
		[/filter]
		variable=planet
	[/store_unit]
	
	[store_unit]
		[filter]
			x,y=$x1,$y1
			ability=transport
		[/filter]
		variable=ship
	[/store_unit]
	
	# Determing where to place beamed unit
	
	# North
	[if]
		[have_unit]
			x,y=$x1,$y1
			[filter_adjacent]
				role=planet
				adjacent=s
			[/filter_adjacent]
		[/have_unit]
		[then]
			{VARIABLE temp_x $planet.variables.n_x}
			{VARIABLE temp_y $planet.variables.n_y}
		[/then]
	[/if]
	# North East
	[if]
		[have_unit]
			x,y=$x1,$y1
			[filter_adjacent]
				role=planet
				adjacent=sw
			[/filter_adjacent]
		[/have_unit]
		[then]
			{VARIABLE temp_x $planet.variables.ne_x}
			{VARIABLE temp_y $planet.variables.ne_y}
		[/then]
	[/if]
	# South East
	[if]
		[have_unit]
			x,y=$x1,$y1
			[filter_adjacent]
				role=planet
				adjacent=nw
			[/filter_adjacent]
		[/have_unit]
		[then]
			{VARIABLE temp_x $planet.variables.se_x}
			{VARIABLE temp_y $planet.variables.se_y}
		[/then]
	[/if]
	# South
	[if]
		[have_unit]
			x,y=$x1,$y1
			[filter_adjacent]
				role=planet
				adjacent=n
			[/filter_adjacent]
		[/have_unit]
		[then]
			{VARIABLE temp_x $planet.variables.s_x}
			{VARIABLE temp_y $planet.variables.s_y}
		[/then]
	[/if]
	# South West
	[if]
		[have_unit]
			x,y=$x1,$y1
			[filter_adjacent]
				role=planet
				adjacent=ne
			[/filter_adjacent]
		[/have_unit]
		[then]
			{VARIABLE temp_x $planet.variables.sw_x}
			{VARIABLE temp_y $planet.variables.sw_y}
		[/then]
	[/if]
	# North West
	[if]
		[have_unit]
			x,y=$x1,$y1
			[filter_adjacent]
				role=planet
				adjacent=se
			[/filter_adjacent]
		[/have_unit]
		[then]
			{VARIABLE temp_x $planet.variables.nw_x}
			{VARIABLE temp_y $planet.variables.nw_y}
		[/then]
	[/if]
	
	# North
	#[if]
	#	{BOB_CONDITION ship.x numerical_equals $planet.x}
	#	{BOB_CONDITION ship.y less_than $planet.y}
	#	[then]
	#		{VARIABLE temp_x $planet.variables.north_x}
	#		{VARIABLE temp_y $planet.variables.north_y}
	#	[/then]
	#[/if]
	# East
	#[if]
	#	{BOB_CONDITION ship.x greater_than $planet.x}
	#	[then]
	#		{VARIABLE temp_x $planet.variables.east_x}
	#		{VARIABLE temp_y $planet.variables.east_y}
	#	[/then]
	#[/if]
	# South
	#[if]
	#	{BOB_CONDITION ship.x numerical_equals $planet.x}
	#	{BOB_CONDITION ship.y greater_than $planet.y}
	#	[then]
	#		{VARIABLE temp_x $planet.variables.south_x}
	#		{VARIABLE temp_y $planet.variables.south_y}
	#	[/then]
	#[/if]
	# west
	#[if]
	#	{BOB_CONDITION ship.x less_than $planet.x}
	#	[then]
	#		{VARIABLE temp_x $planet.variables.west_x}
	#		{VARIABLE temp_y $planet.variables.west_y}
	#	[/then]
	#[/if]

{VARIABLE finished no}
[while]
{BOB_CONDITION finished equals no}
{BOB_CONDITION ship.attack[0].damage greater_than 0}
[do]

[message]
	speaker=unit
	caption="<span color='{GE_BLUE}'>" + _"Beaming Down" + "</span>"
	message= _ "Which passenger will you beam down to $planet.id|?"
 
[option]
message= _ {MENU_IMG_TXT "misc/return.png" _"Return To Game"}
[command]
{VARIABLE finished yes}
[/command]
[/option]

# Beam All

[option]
message= "&misc/beam2.png=<span color='{GE_BLUE}'>" + _"Beam Down All Passengers" + "</span>"
[show_if]
	{BOB_CONDITION ship.attack[0].damage greater_than 1}
[/show_if]
	[command]
		{SCROLL_TO $temp_x $temp_y}
		# 1
		[if]
			{BOB_CONDITION ship.variables.passengers_1_hp greater_than 0}
			[then]
				[recall]
					id=$ship.variables.passengers_1_id
					x,y=$temp_x,$temp_y
				[/recall]
				{BOB_STORE_UNIT id=$ship.variables.passengers_1_id type=$ship.variables.passengers_1_type (
				{VARIABLE stored_unit.role $planet.id}
				{VARIABLE stored_unit.hitpoints $ship.variables.passengers_1_hp}
				)}
				{CLEAR_VARIABLE ship.variables.passengers_1_id}
				{CLEAR_VARIABLE ship.variables.passengers_1_type}
				{CLEAR_VARIABLE ship.variables.passengers_1_image}
				{CLEAR_VARIABLE ship.variables.passengers_1_xp}
				{CLEAR_VARIABLE ship.variables.passengers_1_max_xp}
				{CLEAR_VARIABLE ship.variables.passengers_1_hp}
				{CLEAR_VARIABLE ship.variables.passengers_1_max_hp}
			[/then]
		[/if]
		# 2
		[if]
			{BOB_CONDITION ship.variables.passengers_2_hp greater_than 0}
			[then]
				[recall]
					id=$ship.variables.passengers_2_id
					x,y=$temp_x,$temp_y
				[/recall]
				{BOB_STORE_UNIT id=$ship.variables.passengers_2_id type=$ship.variables.passengers_2_type (
				{VARIABLE stored_unit.role $planet.id}
				{VARIABLE stored_unit.hitpoints $ship.variables.passengers_2_hp}
				)}
				{CLEAR_VARIABLE ship.variables.passengers_2_id}
				{CLEAR_VARIABLE ship.variables.passengers_2_type}
				{CLEAR_VARIABLE ship.variables.passengers_2_image}
				{CLEAR_VARIABLE ship.variables.passengers_2_xp}
				{CLEAR_VARIABLE ship.variables.passengers_2_max_xp}
				{CLEAR_VARIABLE ship.variables.passengers_2_hp}
				{CLEAR_VARIABLE ship.variables.passengers_2_max_hp}
			[/then]
		[/if]
		# 3
		[if]
			{BOB_CONDITION ship.variables.passengers_3_hp greater_than 0}
			[then]
				[recall]
					id=$ship.variables.passengers_3_id
					x,y=$temp_x,$temp_y
				[/recall]
				{BOB_STORE_UNIT id=$ship.variables.passengers_3_id type=$ship.variables.passengers_3_type (
				{VARIABLE stored_unit.role $planet.id}
				{VARIABLE stored_unit.hitpoints $ship.variables.passengers_3_hp}
				)}
				{CLEAR_VARIABLE ship.variables.passengers_3_id}
				{CLEAR_VARIABLE ship.variables.passengers_3_type}
				{CLEAR_VARIABLE ship.variables.passengers_3_image}
				{CLEAR_VARIABLE ship.variables.passengers_3_xp}
				{CLEAR_VARIABLE ship.variables.passengers_3_max_xp}
				{CLEAR_VARIABLE ship.variables.passengers_3_hp}
				{CLEAR_VARIABLE ship.variables.passengers_3_max_hp}
			[/then]
		[/if]
		# 4
		[if]
			{BOB_CONDITION ship.variables.passengers_4_hp greater_than 0}
			[then]
				[recall]
					id=$ship.variables.passengers_4_id
					x,y=$temp_x,$temp_y
				[/recall]
				{BOB_STORE_UNIT id=$ship.variables.passengers_4_id type=$ship.variables.passengers_4_type (
				{VARIABLE stored_unit.role $planet.id}
				{VARIABLE stored_unit.hitpoints $ship.variables.passengers_4_hp}
				)}
				{CLEAR_VARIABLE ship.variables.passengers_4_id}
				{CLEAR_VARIABLE ship.variables.passengers_4_type}
				{CLEAR_VARIABLE ship.variables.passengers_4_image}
				{CLEAR_VARIABLE ship.variables.passengers_4_xp}
				{CLEAR_VARIABLE ship.variables.passengers_4_max_xp}
				{CLEAR_VARIABLE ship.variables.passengers_4_hp}
				{CLEAR_VARIABLE ship.variables.passengers_4_max_hp}
			[/then]
		[/if]
		# 5
		[if]
			{BOB_CONDITION ship.variables.passengers_5_hp greater_than 0}
			[then]
				[recall]
					id=$ship.variables.passengers_5_id
					x,y=$temp_x,$temp_y
				[/recall]
				{BOB_STORE_UNIT id=$ship.variables.passengers_5_id type=$ship.variables.passengers_5_type (
				{VARIABLE stored_unit.role $planet.id}
				{VARIABLE stored_unit.hitpoints $ship.variables.passengers_5_hp}
				)}
				{CLEAR_VARIABLE ship.variables.passengers_5_id}
				{CLEAR_VARIABLE ship.variables.passengers_5_type}
				{CLEAR_VARIABLE ship.variables.passengers_5_image}
				{CLEAR_VARIABLE ship.variables.passengers_5_xp}
				{CLEAR_VARIABLE ship.variables.passengers_5_max_xp}
				{CLEAR_VARIABLE ship.variables.passengers_5_hp}
				{CLEAR_VARIABLE ship.variables.passengers_5_max_hp}
			[/then]
		[/if]
		{VARIABLE ship.attack[0].damage 0}
		{VARIABLE finished yes}
	[/command]
[/option]

# 1

[option]
message= "&$ship.variables.passengers_1_image|~TC($side_number,magenta)=<span color='{GE_BLUE}'>" + _"$ship.variables.passengers_1_type" + "</span>
<span color='green'>" + _"HP:$ship.variables.passengers_1_hp|/$ship.variables.passengers_1_max_hp" + "</span>
<span color='white'>" + _"XP:$ship.variables.passengers_1_xp|/$ship.variables.passengers_1_max_xp" + "</span>"
[show_if]
	{BOB_CONDITION ship.variables.passengers_1_hp greater_than 0}
[/show_if]
	[command]
		[recall]
			id=$ship.variables.passengers_1_id
			x,y=$temp_x,$temp_y
		[/recall]
		{BOB_STORE_UNIT id=$ship.variables.passengers_1_id type=$ship.variables.passengers_1_type (
		{VARIABLE stored_unit.role $planet.id}
		{VARIABLE stored_unit.hitpoints $ship.variables.passengers_1_hp}
		)}
		{CLEAR_VARIABLE ship.variables.passengers_1_id}
		{CLEAR_VARIABLE ship.variables.passengers_1_type}
		{CLEAR_VARIABLE ship.variables.passengers_1_image}
		{CLEAR_VARIABLE ship.variables.passengers_1_xp}
		{CLEAR_VARIABLE ship.variables.passengers_1_max_xp}
		{CLEAR_VARIABLE ship.variables.passengers_1_hp}
		{CLEAR_VARIABLE ship.variables.passengers_1_max_hp}
		{VARIABLE_OP ship.attack[0].damage add -1}
		{SCROLL_TO $temp_x $temp_y}
	[/command]
[/option]

# 2

[option]
message= "&$ship.variables.passengers_2_image|~TC($side_number,magenta)=<span color='{GE_BLUE}'>" + _"$ship.variables.passengers_2_type" + "</span>
<span color='green'>" + _"HP:$ship.variables.passengers_2_hp|/$ship.variables.passengers_2_max_hp" + "</span>
<span color='white'>" + _"XP:$ship.variables.passengers_2_xp|/$ship.variables.passengers_2_max_xp" + "</span>"
[show_if]
	{BOB_CONDITION ship.variables.passengers_2_hp greater_than 0}
[/show_if]
	[command]
		[recall]
			id=$ship.variables.passengers_2_id
			x,y=$temp_x,$temp_y
		[/recall]
		{BOB_STORE_UNIT id=$ship.variables.passengers_2_id type=$ship.variables.passengers_2_type (
		{VARIABLE stored_unit.role $planet.id}
		{VARIABLE stored_unit.hitpoints $ship.variables.passengers_2_hp}
		)}
		{CLEAR_VARIABLE ship.variables.passengers_2_id}
		{CLEAR_VARIABLE ship.variables.passengers_2_type}
		{CLEAR_VARIABLE ship.variables.passengers_2_image}
		{CLEAR_VARIABLE ship.variables.passengers_2_xp}
		{CLEAR_VARIABLE ship.variables.passengers_2_max_xp}
		{CLEAR_VARIABLE ship.variables.passengers_2_hp}
		{CLEAR_VARIABLE ship.variables.passengers_2_max_hp}
		{VARIABLE_OP ship.attack[0].damage add -1}
		{SCROLL_TO $temp_x $temp_y}
	[/command]
[/option]

# 3

[option]
message= "&$ship.variables.passengers_3_image|~TC($side_number,magenta)=<span color='{GE_BLUE}'>" + _"$ship.variables.passengers_3_type" + "</span>
<span color='green'>" + _"HP:$ship.variables.passengers_3_hp|/$ship.variables.passengers_3_max_hp" + "</span>
<span color='white'>" + _"XP:$ship.variables.passengers_3_xp|/$ship.variables.passengers_3_max_xp" + "</span>"
[show_if]
	{BOB_CONDITION ship.variables.passengers_3_hp greater_than 0}
[/show_if]
	[command]
		[recall]
			id=$ship.variables.passengers_3_id
			x,y=$temp_x,$temp_y
		[/recall]
		{BOB_STORE_UNIT id=$ship.variables.passengers_3_id type=$ship.variables.passengers_3_type (
		{VARIABLE stored_unit.role $planet.id}
		{VARIABLE stored_unit.hitpoints $ship.variables.passengers_3_hp}
		)}
		{CLEAR_VARIABLE ship.variables.passengers_3_id}
		{CLEAR_VARIABLE ship.variables.passengers_3_type}
		{CLEAR_VARIABLE ship.variables.passengers_3_image}
		{CLEAR_VARIABLE ship.variables.passengers_3_xp}
		{CLEAR_VARIABLE ship.variables.passengers_3_max_xp}
		{CLEAR_VARIABLE ship.variables.passengers_3_hp}
		{CLEAR_VARIABLE ship.variables.passengers_3_max_hp}
		{VARIABLE_OP ship.attack[0].damage add -1}
		{SCROLL_TO $temp_x $temp_y}
	[/command]
[/option]

# 4

[option]
message= "&$ship.variables.passengers_4_image|~TC($side_number,magenta)=<span color='{GE_BLUE}'>" + _"$ship.variables.passengers_4_type" + "</span>
<span color='green'>" + _"HP:$ship.variables.passengers_4_hp|/$ship.variables.passengers_4_max_hp" + "</span>
<span color='white'>" + _"XP:$ship.variables.passengers_4_xp|/$ship.variables.passengers_4_max_xp" + "</span>"
[show_if]
	{BOB_CONDITION ship.variables.passengers_4_hp greater_than 0}
[/show_if]
	[command]
		[recall]
			id=$ship.variables.passengers_4_id
			x,y=$temp_x,$temp_y
		[/recall]
		{BOB_STORE_UNIT id=$ship.variables.passengers_4_id type=$ship.variables.passengers_4_type (
		{VARIABLE stored_unit.role $planet.id}
		{VARIABLE stored_unit.hitpoints $ship.variables.passengers_4_hp}
		)}
		{CLEAR_VARIABLE ship.variables.passengers_4_id}
		{CLEAR_VARIABLE ship.variables.passengers_4_type}
		{CLEAR_VARIABLE ship.variables.passengers_4_image}
		{CLEAR_VARIABLE ship.variables.passengers_4_xp}
		{CLEAR_VARIABLE ship.variables.passengers_4_max_xp}
		{CLEAR_VARIABLE ship.variables.passengers_4_hp}
		{CLEAR_VARIABLE ship.variables.passengers_4_max_hp}
		{VARIABLE_OP ship.attack[0].damage add -1}
		{SCROLL_TO $temp_x $temp_y}
	[/command]
[/option]

# 5

[option]
message= "&$ship.variables.passengers_5_image|~TC($side_number,magenta)=<span color='{GE_BLUE}'>" + _"$ship.variables.passengers_5_type" + "</span>
<span color='green'>" + _"HP:$ship.variables.passengers_5_hp|/$ship.variables.passengers_5_max_hp" + "</span>
<span color='white'>" + _"XP:$ship.variables.passengers_5_xp|/$ship.variables.passengers_5_max_xp" + "</span>"
[show_if]
	{BOB_CONDITION ship.variables.passengers_5_hp greater_than 0}
[/show_if]
	[command]
		[recall]
			id=$ship.variables.passengers_5_id
			x,y=$temp_x,$temp_y
		[/recall]
		{BOB_STORE_UNIT id=$ship.variables.passengers_5_id type=$ship.variables.passengers_5_type (
		{VARIABLE stored_unit.role $planet.id}
		{VARIABLE stored_unit.hitpoints $ship.variables.passengers_5_hp}
		)}
		{CLEAR_VARIABLE ship.variables.passengers_5_id}
		{CLEAR_VARIABLE ship.variables.passengers_5_type}
		{CLEAR_VARIABLE ship.variables.passengers_5_image}
		{CLEAR_VARIABLE ship.variables.passengers_5_xp}
		{CLEAR_VARIABLE ship.variables.passengers_5_max_xp}
		{CLEAR_VARIABLE ship.variables.passengers_5_hp}
		{CLEAR_VARIABLE ship.variables.passengers_5_max_hp}
		{VARIABLE_OP ship.attack[0].damage add -1}
		{SCROLL_TO $temp_x $temp_y}
	[/command]
[/option]

[/message]

[/do]
[/while]

	# The planet is colonised if it was previously empty
	[if]
		{BOB_CONDITION planet.variables.colonised equals empty}
		[have_unit]
			side=$side_number
			role=$planet.id
		[/have_unit]
		[then]
			{SCROLL_TO $planet.variables.hq_x $planet.variables.hq_y}
			{GE_CREATE_HQ $side_number $planet.id $planet.variables.hq_x $planet.variables.hq_y}
			{GE_FLOATING_LABEL x=$planet.variables.hq_x y=$planet.variables.hq_y "Colonised" red,green,blue=153,153,153}
			{VARIABLE planet.variables.colonised colonised}
			{VARIABLE planet.side $side_number}
			[capture_village]
				x=$planet.variables.hq_x
				y=$planet.variables.hq_y
				side=$side_number
			[/capture_village]
		[/then]
	[/if]
	
	[unstore_unit]
		variable=ship
	[/unstore_unit]
	
	[unstore_unit]
		variable=planet
	[/unstore_unit]
	
	{CLEAR_VARIABLE ship}
	{CLEAR_VARIABLE planet}	
	{CLEAR_VARIABLE temp_x}	
	{CLEAR_VARIABLE temp_y}	
	
	[/command]
[/set_menu_item]

#enddef









####################################################################################
# Inspect Passengers
####################################################################################

#define GE_INSPECT_PASSENGERS
[set_menu_item]
	id=Inspect_Passengers
	description=_ "Inspect Passengers"
	image=misc/eye.png
	[show_if]
		[have_unit]
			x,y=$x1,$y1
			side=$side_number
			ability=transport
			[not]
				[filter_wml]
					[attack]
						name=passengers
						damage=0
					[/attack]
				[/filter_wml]
			[/not]
			[not]
				[filter_adjacent]
					role=planet
				[/filter_adjacent]
			[/not]
		[/have_unit]
	[/show_if]
	[command]
	
	[store_unit]
		[filter]
			x,y=$x1,$y1
			ability=transport
		[/filter]
		variable=ship
	[/store_unit]
	
{VARIABLE finished no}
[while]
{BOB_CONDITION finished equals no}
[do]

[message]
	speaker=unit
	caption="<span color='{GE_BLUE}'>" + _"Passenger Inspection" + "</span>"
	message= _ " "
 
[option]
message= _ {MENU_IMG_TXT "misc/return.png" _"Return To Game"}
[command]
{VARIABLE finished yes}
[/command]
[/option]

# 1

[option]
message= "&$ship.variables.passengers_1_image|~TC($side_number,magenta)=<span color='{GE_BLUE}'>" + _"$ship.variables.passengers_1_type" + "</span>
<span color='green'>" + _"HP:$ship.variables.passengers_1_hp|/$ship.variables.passengers_1_max_hp" + "</span>
<span color='white'>" + _"XP:$ship.variables.passengers_1_xp|/$ship.variables.passengers_1_max_xp" + "</span>"
[show_if]
	{BOB_CONDITION ship.variables.passengers_1_hp greater_than 0}
[/show_if]
	[command]
	[/command]
[/option]

# 2

[option]
message= "&$ship.variables.passengers_2_image|~TC($side_number,magenta)=<span color='{GE_BLUE}'>" + _"$ship.variables.passengers_2_type" + "</span>
<span color='green'>" + _"HP:$ship.variables.passengers_2_hp|/$ship.variables.passengers_2_max_hp" + "</span>
<span color='white'>" + _"XP:$ship.variables.passengers_2_xp|/$ship.variables.passengers_2_max_xp" + "</span>"
[show_if]
	{BOB_CONDITION ship.variables.passengers_2_hp greater_than 0}
[/show_if]
	[command]
	[/command]
[/option]

# 3

[option]
message= "&$ship.variables.passengers_3_image|~TC($side_number,magenta)=<span color='{GE_BLUE}'>" + _"$ship.variables.passengers_3_type" + "</span>
<span color='green'>" + _"HP:$ship.variables.passengers_3_hp|/$ship.variables.passengers_3_max_hp" + "</span>
<span color='white'>" + _"XP:$ship.variables.passengers_3_xp|/$ship.variables.passengers_3_max_xp" + "</span>"
[show_if]
	{BOB_CONDITION ship.variables.passengers_3_hp greater_than 0}
[/show_if]
	[command]
	[/command]
[/option]

# 4

[option]
message= "&$ship.variables.passengers_4_image|~TC($side_number,magenta)=<span color='{GE_BLUE}'>" + _"$ship.variables.passengers_4_type" + "</span>
<span color='green'>" + _"HP:$ship.variables.passengers_4_hp|/$ship.variables.passengers_4_max_hp" + "</span>
<span color='white'>" + _"XP:$ship.variables.passengers_4_xp|/$ship.variables.passengers_4_max_xp" + "</span>"
[show_if]
	{BOB_CONDITION ship.variables.passengers_4_hp greater_than 0}
[/show_if]
	[command]
	[/command]
[/option]

# 5

[option]
message= "&$ship.variables.passengers_5_image|~TC($side_number,magenta)=<span color='{GE_BLUE}'>" + _"$ship.variables.passengers_5_type" + "</span>
<span color='green'>" + _"HP:$ship.variables.passengers_5_hp|/$ship.variables.passengers_5_max_hp" + "</span>
<span color='white'>" + _"XP:$ship.variables.passengers_5_xp|/$ship.variables.passengers_5_max_xp" + "</span>"
[show_if]
	{BOB_CONDITION ship.variables.passengers_5_hp greater_than 0}
[/show_if]
	[command]
	[/command]
[/option]

[/message]

[/do]
[/while]

	[unstore_unit]
		variable=ship
	[/unstore_unit]
	{CLEAR_VARIABLE ship}
	
	[/command]
[/set_menu_item]

#enddef


#define GE_ONBOARD_SYSTEMS_OLD

[event]
	name=side turn
	first_time_only=no
	
	# Are there any injured passengers?
	[if]
		[have_unit]
			side=$side_number
			role=transit
			[not]
				[filter_wml]
					hitpoints=$this_unit.max_hitpoints
				[/filter_wml]
			[/not]
			search_recall_list=yes
		[/have_unit]
		[then]
		
		# If so, store all injured passengers
		[store_unit]
			[filter]
				side=$side_number
				role=transit
				[not]
					[filter_wml]
						hitpoints=$this_unit.max_hitpoints
					[/filter_wml]
				[/not]
			[/filter]
			variable=stored_unit
		[/store_unit]
			
			{FOREACH stored_unit i}
				
				# Heal all injured passengers 2HP
				{VARIABLE_OP stored_unit[$i].hitpoints add 2}
				
				# Terran transporters heal 8HP per turn, so add an extra 6HP
				[if]
					{BOB_CONDITION empire[$side_number].faction equals Terran}
					[then]
						{VARIABLE_OP stored_unit[$i].hitpoints add 6}
					[/then]
				[/if]
				
				# If any passengers are healed above their max HP, this corrects it
				[if]
					{BOB_CONDITION stored_unit[$i].hitpoints greater_than $stored_unit[$i].max_hitpoints}
					[then]
						{VARIABLE stored_unit[$i].hitpoints $stored_unit[$i].max_hitpoints}
					[/then]
				[/if]
				
			[unstore_unit]
				variable=stored_unit[$i]
			[/unstore_unit]
						
			{NEXT i}
		
		{CLEAR_VARIABLE stored_unit}
		[/then]
	[/if]
[/event]
#enddef

####################################################################################
# Onboard Systems
####################################################################################

#define GE_ONBOARD_SYSTEMS

####################################
# Onboard Healing
####################################

[event]
	name=side turn
	first_time_only=no
	
	# Are there any transporters which...
	[if]
		[have_unit]
			side=$side_number
			ability=transport
			# are carrying passengers
			[not]
				[filter_wml]
					[attack]
						name=passengers
						damage=0
					[/attack]
				[/filter_wml]
			[/not]
			# and carrying passengers which are injured
			[not]
				[filter_wml]
					[variables]
							passengers_1_hp=$this_unit.variables.passengers_1_max_hp
							passengers_2_hp=$this_unit.variables.passengers_2_max_hp
							passengers_3_hp=$this_unit.variables.passengers_3_max_hp
							passengers_4_hp=$this_unit.variables.passengers_4_max_hp
							passengers_5_hp=$this_unit.variables.passengers_5_max_hp
					[/variables]
				[/filter_wml]
			[/not]
		[/have_unit]
		[then]

		# If so, store all transporters with injured passengers
		[store_unit]
			[filter]
				side=$side_number
				ability=transport
				[not]
					[filter_wml]
						[attack]
							name=passengers
							damage=0
						[/attack]
					[/filter_wml]
				[/not]
				[not]
					[filter_wml]
						[variables]
								passengers_1_hp=$this_unit.variables.passengers_1_max_hp
								passengers_2_hp=$this_unit.variables.passengers_2_max_hp
								passengers_3_hp=$this_unit.variables.passengers_3_max_hp
								passengers_4_hp=$this_unit.variables.passengers_4_max_hp
								passengers_5_hp=$this_unit.variables.passengers_5_max_hp
						[/variables]
					[/filter_wml]
				[/not]
			[/filter]
			variable=ship
		[/store_unit]
				
				# Determine how much they are to be healed (Terran transporters heal 4HP per turn)
				{VARIABLE temp_healing 2}
				[if]
					{BOB_CONDITION empire[$side_number].faction equals Terran}
					[then]
						{VARIABLE temp_healing 4}
					[/then]
				[/if]
				
			{FOREACH ship i}
	
				# Heal all injured passengers 2HP
				[if]
					{BOB_CONDITION ship[$i].variables.passengers_1_hp less_than $ship[$i].variables.passengers_1_max_hp}
					[then]
						{VARIABLE_OP ship[$i].variables.passengers_1_hp add $temp_healing}
					[/then]
				[/if]
				[if]
					{BOB_CONDITION ship[$i].variables.passengers_2_hp less_than $ship[$i].variables.passengers_2_max_hp}
					[then]
						{VARIABLE_OP ship[$i].variables.passengers_2_hp add $temp_healing}
					[/then]
				[/if]
				[if]
					{BOB_CONDITION ship[$i].variables.passengers_3_hp less_than $ship[$i].variables.passengers_3_max_hp}
					[then]
						{VARIABLE_OP ship[$i].variables.passengers_3_hp add $temp_healing}
					[/then]
				[/if]
				[if]
					{BOB_CONDITION ship[$i].variables.passengers_4_hp less_than $ship[$i].variables.passengers_4_max_hp}
					[then]
						{VARIABLE_OP ship[$i].variables.passengers_4_hp add $temp_healing}
					[/then]
				[/if]
				[if]
					{BOB_CONDITION ship[$i].variables.passengers_5_hp less_than $ship[$i].variables.passengers_5_max_hp}
					[then]
						{VARIABLE_OP ship[$i].variables.passengers_5_hp add $temp_healing}
					[/then]
				[/if]
				
				# If any passengers are healed above their max HP, this corrects it
				[if]
					{BOB_CONDITION ship[$i].variables.passengers_1_hp greater_than $ship[$i].variables.passengers_1_max_hp}
					[then]
						{VARIABLE ship[$i].variables.passengers_1_hp $ship[$i].variables.passengers_1_max_hp}
					[/then]
				[/if]
				[if]
					{BOB_CONDITION ship[$i].variables.passengers_2_hp greater_than $ship[$i].variables.passengers_2_max_hp}
					[then]
						{VARIABLE ship[$i].variables.passengers_2_hp $ship[$i].variables.passengers_2_max_hp}
					[/then]
				[/if]
				[if]
					{BOB_CONDITION ship[$i].variables.passengers_3_hp greater_than $ship[$i].variables.passengers_3_max_hp}
					[then]
						{VARIABLE ship[$i].variables.passengers_3_hp $ship[$i].variables.passengers_3_max_hp}
					[/then]
				[/if]
				[if]
					{BOB_CONDITION ship[$i].variables.passengers_4_hp greater_than $ship[$i].variables.passengers_4_max_hp}
					[then]
						{VARIABLE ship[$i].variables.passengers_4_hp $ship[$i].variables.passengers_4_max_hp}
					[/then]
				[/if]
				[if]
					{BOB_CONDITION ship[$i].variables.passengers_5_hp greater_than $ship[$i].variables.passengers_5_max_hp}
					[then]
						{VARIABLE ship[$i].variables.passengers_5_hp $ship[$i].variables.passengers_5_max_hp}
					[/then]
				[/if]
				
			[unstore_unit]
				variable=ship[$i]
			[/unstore_unit]
						
			{NEXT i}
		
		{CLEAR_VARIABLE ship}
		{CLEAR_VARIABLE temp_healing}
		[/then]
	[/if]
[/event]


#enddef
